name: Build Executables (Windows & macOS)

on:
  push:
    branches: 
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, macos-latest]

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pyinstaller     # 只装 PyInstaller

      # 安装 UPX (不同系统不同方法)
      - name: Install UPX on macOS
        if: matrix.os == 'macos-latest'
        run: brew install upx

      - name: Install UPX on Windows
        if: matrix.os == 'windows-latest'
        run: choco install upx -y
        shell: pwsh

      # 打包（不同平台排除不必要模块，减小体积）
      - name: Build executable (Windows)
        if: matrix.os == 'windows-latest'
        run: |
          pyinstaller --onefile --clean `
            --exclude-module tkinter `
            --exclude-module test `
            --exclude-module email `
            main.py
        shell: pwsh

      - name: Build executable (Mac)
        if: matrix.os == 'macos-latest'
        run: |
          pyinstaller --onefile --clean \
            --exclude-module tkinter \
            --exclude-module test \
            --exclude-module email \
            main.py
        shell: bash

      # 压缩
      - name: Compress with UPX
        run: upx dist/*

      # 上传 Artifact
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: myapp-${{ matrix.os }}
          path: dist/*
